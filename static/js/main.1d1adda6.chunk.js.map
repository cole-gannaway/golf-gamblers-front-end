{"version":3,"sources":["context/AuthProvider.tsx","common/StripeUtils.ts","component/Account.tsx","component/auth/Login.tsx","context/ThemeProvider.tsx","component/Home.tsx","common/install/pwa_share_menu_ios.jpeg","common/install/pwa_installation_ios.jpeg","common/install/pwa_add_bookmark_ios.jpg","common/install/pwa_installed_ios.jpeg","component/Install.tsx","common/logo.svg","common/AppIcon.tsx","component/NavBar.tsx","common/utils/DateUtils.ts","context/BreadcrumbsProvider.tsx","component/forms/SelectCourse.tsx","component/forms/SelectGroup.tsx","component/forms/CreateEvent.tsx","component/test/Test.tsx","component/Main.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["app","firebase","apps","length","initializeApp","FireBaseConfig","db","firestore","functions","auth","unsubscribeCallbacksMap","Map","AuthUserContext","createContext","SubscriptionContext","undefined","AuthProvider","props","useState","userState","setUserState","subscriptionState","setSubscriptionState","useEffect","unsubscribes","unsubAuthStateChanged","onAuthStateChanged","user","unsubUserDocs","collection","doc","uid","onSnapshot","snap","exists","subData","data","subscriptionLevel","push","i","unsubscribe","Provider","value","children","useUserContext","useContext","useSubscriptionContext","getDb","unsubScribeFromAllListeners","forEach","clear","createPortalLink","a","functionRef","httpsCallable","returnUrl","window","location","origin","assign","url","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","createNewSubscription","stripe","snackbar","enqueueSnackbar","variant","add","price","StripeConfig","subscription_prices_keys","basic","success_url","cancel_url","error","sessionId","alert","message","redirectToCheckout","Account","useStripe","useSnackbar","matVariant","TextField","fullWidth","label","email","disabled","displayName","Button","startIcon","onClick","signOut","confirmDelete","confirm","delete","then","console","log","catch","e","deleteAccount","color","Login","history","useHistory","initialPath","state","from","pathname","to","style","height","id","firebaseAuth","defaultTheme","theme_color","background_color","ThemeContext","useThemeContext","Home","theme","aria-label","Install","textAlign","Grid","container","spacing","item","xs","Divider","src","PWAShareIconImage","alt","width","PWAAddToHomeScreenImage","PWAInstallationImage","PWAInstalledImage","AppIcon","logo","NavBar","AppBar","position","backgroundColor","Toolbar","flexGrow","DateUtils","d","toISOString","substring","hours","getHours","minutes","getMinutes","toString","date","time","Date","splitTime","split","parseInt","setHours","setMinutes","defaultBreadCrumbs","BreadCrumbsContext","update","newValue","SelectCourse","searchText","setSearchText","courseResults","setCourseResults","getUTCMilliseconds","timer","setTimer","newSearchText","query","where","limit","get","courseSearchResults","searchResultsArr","docs","course","type","onChange","target","clearTimeout","setTimeout","searchForCourseName","InputProps","startAdornment","InputAdornment","map","courseObj","Card","courseId","courseName","name","selectCourse","goBack","country","city","SelectGroup","CreateEvent","eventName","setEventName","setCourseName","setCourseId","maxBet","setMaxBet","getDateInYYYY_MM_DD_Format","startDate","setStartDate","getTimeInHH_MM_Format","startTime","setStartTime","isSelectingCourse","setIsSelectingCourse","isSelectingGroup","handleEventNameChange","handleStartTimeChange","onFocus","updated","NaN","Test","betIdToBetTypeMap","scorecard1","setScorecard1","scorecard2","setScorecard2","scorecard3","setScorecard3","scorecardLeaderboard","setScorecardLeaderboard","betsLeaderboard","setBetsLeaderboard","scorecards","scorecardsDiv","Object","values","scorecard","index","holeNumbers","keys","holes","scorecardId","userId","alignContent","holeNumber","hole","strokes","handleScorecardUpdate","runningTotal","set","handleScorecardSave","betsLeaderboardDiv","entries","betSummary","betSummaryEntry","summary","userBetEntries","betsAndResults","sumOfBets","betEntries","userBetEntry","betId","betResult","paddingLeft","Main","path","PrivateRoute","rest","render","stripePromise","loadStripe","publishableKey","App","anchorOrigin","vertical","horizontal","fetchCount","amount","Promise","resolve","incrementAsync","createAsyncThunk","response","counterSlice","createSlice","initialState","status","reducers","increment","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","process","href","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1d1adda6.chunk.js","sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\n\n// import Firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\n\nimport FireBaseConfig from '../config/firebase.test.config.json'\n\n// initalize Firebase\nconst app = (!firebase.apps.length) ? firebase.initializeApp(FireBaseConfig) : firebase.app();\nconst db = app.firestore();\nconst functions = app.functions('us-central1');\nconst auth = app.auth();\n\n// auth.useEmulator(\"http://localhost:9099/\");\n// db.useEmulator(\"localhost\", 8080);\n// functions.useEmulator(\"localhost\", 5001);\n\nlet unsubscribeCallbacksMap: Map<string, (() => void)> = new Map();\n\n// create contexts\nconst AuthUserContext = createContext<firebase.User | null>(null);\nconst SubscriptionContext = createContext<any | undefined>(undefined);\n\ninterface IAuthContextProps {\n    children: any\n}\n\n// AuthProvider wraps all of the Auth functionality\nexport function AuthProvider(props: IAuthContextProps) {\n    const [userState, setUserState] = useState<firebase.User | null>(null);\n    const [subscriptionState, setSubscriptionState] = useState<any | undefined>(undefined);\n    useEffect(() => {\n        const unsubscribes: any = []\n        const unsubAuthStateChanged = auth.onAuthStateChanged((user) => {\n            if (user) {\n                const unsubUserDocs = db.collection('users')\n                    .doc(user.uid)\n                    .collection('private').doc('account-data')\n                    .onSnapshot((snap) => {\n                        if (snap.exists) {\n                            const subData = snap.data();\n                            if (subData?.subscriptionState === 'Basic') {\n                                // currently only Basic exists, can add different tiers later\n                                setSubscriptionState({ subscriptionLevel: 'Basic' })\n                            }\n                        }\n                    });\n                unsubscribes.push(unsubUserDocs);\n            } else {\n                setSubscriptionState(undefined);\n            }\n            setUserState(user)\n        });\n        unsubscribes.push(unsubAuthStateChanged);\n        return () => {\n            // unsubscribe from all\n            for (let i = 0; i < unsubscribes.length; i++) {\n                const unsubscribe = unsubscribes[i];\n                unsubscribe();\n            }\n        }\n    }, []);\n    return <AuthUserContext.Provider value={userState}>\n        <SubscriptionContext.Provider value={subscriptionState}>\n            {props.children}\n        </SubscriptionContext.Provider>\n    </AuthUserContext.Provider>;\n}\n\n// expose methods for accessing different AuthContexts \nexport function useUserContext() {\n    return useContext(AuthUserContext);\n}\nexport function useSubscriptionContext() {\n    return useContext(SubscriptionContext);\n}\n\n// expose globabl variables\nexport function getAuth() {\n    return auth;\n}\n\nexport function getDb() {\n    return db;\n}\n\nexport function getFunctions() {\n    return functions\n}\n\nfunction unsubScribeFromAllListeners() {\n    // call each unsubscribe method\n    unsubscribeCallbacksMap.forEach((unsubscribe) => {\n        unsubscribe();\n    });\n    // reset map\n    unsubscribeCallbacksMap.clear();\n}\n\nexport function unsubscribeFromListener(id: string) {\n    const unsubscribe = unsubscribeCallbacksMap.get(id);\n    if (unsubscribe) {\n        unsubscribe();\n        unsubscribeCallbacksMap.delete(id);\n    } else {\n        console.error(\"No listener with the id \" + id + \" exists\");\n    }\n}\n\nexport function logout() {\n    unsubScribeFromAllListeners();\n    auth.signOut();\n}\n\nexport function deleteAccount(user: firebase.User) {\n    unsubScribeFromAllListeners();\n    user.delete().then(() => console.log('Successfully deleted account')).catch((e) => console.error(e));\n}\n\n// MISC Stripe things\nexport async function createPortalLink() {\n    // code copied from the docs that redirects to manage stripe account\n    const functionRef = functions.httpsCallable('ext-firestore-stripe-subscriptions-createPortalLink');\n    const { data } = await functionRef({ returnUrl: window.location.origin });\n    window.location.assign(data.url);\n    return true;\n}\n\n\n// Configure FirebaseUI.\nexport const uiConfig: firebaseui.auth.Config = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display email\n    signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n    }\n};\n","// import Stripe\nimport { Stripe } from '@stripe/stripe-js';\nimport StripeConfig from '../config/stripe.config.json';\n\n// import Firebase\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n// import Notistack\nimport { ProviderContext } from 'notistack';\n\nexport async function createNewSubscription(\n  stripe: Stripe,\n  db: firebase.firestore.Firestore,\n  user: firebase.User,\n  snackbar: ProviderContext\n) {\n  snackbar.enqueueSnackbar('Redirecting to Stripe...', { variant: 'info' });\n  const docRef = await db\n    .collection('customers')\n    .doc(user.uid)\n    .collection('checkout_sessions')\n    .add({\n      price: StripeConfig.subscription_prices_keys.basic, // priceId from stripe\n      success_url: window.location.origin, // return user to this screen\n      cancel_url: window.location.origin, // return user to this screen\n    });\n  docRef.onSnapshot((snap) => {\n    const data = snap.data();\n    if (data) {\n      const { error, sessionId } = data;\n      if (error) {\n        // Show an error to your customer and\n        // inspect your Cloud Function logs in the Firebase console.\n        alert('An error occured: ' + error.message);\n      }\n      if (sessionId) {\n        stripe.redirectToCheckout({ sessionId });\n      }\n    }\n  });\n}\n","// Stripe\nimport { useStripe } from \"@stripe/react-stripe-js\";\n\n// Material UI\nimport { Button, TextField } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\n\n// Provider\nimport { createPortalLink, getDb, useUserContext, logout, useSubscriptionContext, deleteAccount } from \"../context/AuthProvider\";\n\n// Snackbar\nimport { useSnackbar } from 'notistack';\n\n// Utils\nimport { createNewSubscription } from \"../common/StripeUtils\";\n\nexport default function Account() {\n    // get global variables from providers\n    const user = useUserContext();\n    const db = getDb();\n    const stripe = useStripe();\n    const subscriptionState = useSubscriptionContext();\n    const snackbar = useSnackbar();\n\n    // button click handlers\n    function handleLogout() {\n        logout();\n    }\n    function handleDeleteAccount() {\n        const confirmDelete = window.confirm(\"Are you sure?\");\n        if (user && confirmDelete) {\n            deleteAccount(user);\n        }\n    };\n    async function handleCreateNewSubscription() {\n        if (user && stripe) {\n            createNewSubscription(stripe, db, user, snackbar);\n        }\n    }\n    async function handleCreatePortalLink() {\n        snackbar.enqueueSnackbar('Redirecting to Stripe...', { variant: 'info' });\n        await createPortalLink();\n        return true;\n    }\n    function handleUpdateProfile() {\n\n    }\n\n    const matVariant = \"outlined\";\n\n    return <div >\n        <div>\n            <h2>Account Information</h2>\n            <div><TextField variant={matVariant} fullWidth={true} label=\"Email\" value={user?.email} disabled={true} /></div>\n            <br></br>\n            <div><TextField variant={matVariant} fullWidth={true} label=\"Full Name\" value={user?.displayName} disabled={true} /></div>\n            <br></br>\n            <Button variant={matVariant} fullWidth={true} startIcon={<SaveIcon />} onClick={handleUpdateProfile} disabled={true}>Save</Button>\n        </div>\n        <div>\n            <h2>Subscription</h2>\n            <div>\n                <div>Subscription Level: {subscriptionState?.subscriptionLevel ? subscriptionState.subscriptionLevel : 'None'}</div>\n                <br></br>\n                {subscriptionState ?\n                    <div>\n                        <Button variant={matVariant} fullWidth={true} onClick={handleCreatePortalLink}>Manage Subscription</Button>\n                    </div> :\n                    <div>\n                        <Button variant={matVariant} fullWidth={true} onClick={handleCreateNewSubscription} >Subscribe</Button>\n                    </div>\n                }\n            </div>\n        </div>\n        <br></br>\n        <div>\n            <h2>Account Actions</h2>\n            <div>\n                <Button variant={matVariant} fullWidth={true} onClick={handleLogout} >Logout</Button>\n            </div>\n            <br></br>\n            <div>\n                <Button variant={matVariant} fullWidth={true} startIcon={<DeleteIcon />} onClick={handleDeleteAccount} color=\"secondary\">Delete Account</Button>\n            </div>\n        </div>\n    </div>\n}","import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport { getAuth, uiConfig, useUserContext } from '../../context/AuthProvider';\n\nexport default function Login() {\n    const history = useHistory();\n    const auth = getAuth();\n    const user = useUserContext();\n\n    // Redirect to the original requested url\n    let initialPath: any = undefined;\n    if (history && history.location && history.location.state) {\n        const state: any = history.location.state;\n        if (state && state.from && state.from.pathname) {\n            initialPath = state.from.pathname;\n        }\n    }\n    if (user) {\n        if (initialPath && initialPath !== '/login') {\n            return <Redirect to={initialPath}></Redirect>;\n        } else {\n            return <Redirect to=\"/\"></Redirect>;\n        }\n    } else {\n        return <div>\n            <div style={{ height: \"20px\" }}>  </div>\n            <div id=\"firebaseui-auth-container\">\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n            </div>\n        </div>\n    }\n}","import { createContext, useContext } from 'react';\n\nconst defaultTheme = {\n    color: \"white\",\n    theme_color: \"#ffd700\",\n    background_color: \"#728a75\"\n}\n\nconst ThemeContext = createContext(defaultTheme);\n\ninterface IThemeContextProps {\n    children: any\n}\n\nexport function ThemeProvider(props: IThemeContextProps) {\n    return <ThemeContext.Provider value={defaultTheme}>\n        {props.children}\n    </ThemeContext.Provider>;\n}\n\nexport function useThemeContext() {\n    return useContext(ThemeContext);\n}","import { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useSubscriptionContext, useUserContext } from \"../context/AuthProvider\";\nimport { useThemeContext } from \"../context/ThemeProvider\";\n\nexport default function Home() {\n    const user = useUserContext();\n    const subscriptionState = useSubscriptionContext();\n    const theme = useThemeContext();\n\n    return <div>\n        {subscriptionState ? <div>\n            <h3>Welcome {user?.displayName} !</h3>\n            <h4>Events</h4>\n            <div>\n                <Link to=\"/create-event\" style={{ color: theme.background_color }}>\n                    <Button aria-label=\"create-event\" color=\"inherit\">Create Event</Button>\n                </Link>\n            </div>\n        </div> :\n            <div>\n                <p>Update your account's subscription to see this content.</p>\n            </div>\n        }\n    </div>\n}","export default __webpack_public_path__ + \"static/media/pwa_share_menu_ios.4ab46d8d.jpeg\";","export default __webpack_public_path__ + \"static/media/pwa_installation_ios.021de36f.jpeg\";","export default __webpack_public_path__ + \"static/media/pwa_add_bookmark_ios.5f5b13b6.jpg\";","export default __webpack_public_path__ + \"static/media/pwa_installed_ios.20234b25.jpeg\";","import { Divider, Grid } from '@material-ui/core';\nimport PWAShareIconImage from '../common/install/pwa_share_menu_ios.jpeg'\nimport PWAInstallationImage from '../common/install/pwa_installation_ios.jpeg'\nimport PWAAddToHomeScreenImage from '../common/install/pwa_add_bookmark_ios.jpg'\nimport PWAInstalledImage from '../common/install/pwa_installed_ios.jpeg'\n\nexport default function Install() {\n    return <div style={{ textAlign: \"left\" }}>\n        <Grid container spacing={3}>\n            <Grid item xs={1}>\n                {/* Padding */}\n            </Grid>\n            <Grid item xs={10}>\n                <p>\n                    This application is a <b>P</b>rogressive <b>W</b>eb <b>A</b>pplication or <b>PWA</b> for short.<br></br>\n                    Because of this, the aplication can be installed locally on phone or desktop computer.<br></br>\n                    <br></br>\n                    Note: Updates occur regularly and the app may need to be reinstalled\n                </p>\n                <Divider></Divider>\n                <h3>Install PWA on IOS</h3>\n                <h5>1. Select the share icon at the bottom</h5>\n                <div>\n                    <img src={PWAShareIconImage} alt=\"Error\" width=\"200px\"></img>\n                </div>\n                <h5>2. Select \"Add to Home Screen\"</h5>\n                <div>\n                    <img src={PWAAddToHomeScreenImage} alt=\"Error\" width=\"200px\"></img>\n                </div>\n                <h5>3. Select \"Add\"</h5>\n                <div>\n                    <img src={PWAInstallationImage} alt=\"Error\" width=\"200px\"></img>\n                </div>\n                <h5>Done!</h5>\n                <div>\n                    <img src={PWAInstalledImage} alt=\"Error\" width=\"200px\"></img>\n                </div>\n                <div>\n                </div>\n            </Grid>\n            <Grid item xs={1}>\n                {/* Padding */}\n            </Grid>\n        </Grid>\n\n    </div>\n}","export default __webpack_public_path__ + \"static/media/logo.e24ff742.svg\";","import { Link } from \"react-router-dom\";\nimport logo from './logo.svg';\nexport default function AppIcon(props: any) {\n  return <Link to=\"/\" style={{ color: \"white\" }}>\n    <img src={logo} alt=\"HOME\" height=\"24px\"></img>\n  </Link>\n}","import { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar } from \"@material-ui/core\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport AppIcon from '../common/AppIcon'\nimport { useThemeContext } from \"../context/ThemeProvider\";\nexport default function NavBar() {\n    const theme = useThemeContext();\n    return <AppBar position=\"static\" style={{ backgroundColor: theme.background_color }}>\n        <Toolbar>\n            <AppIcon></AppIcon>\n            <div style={{ flexGrow: 1 }}></div>\n            <Link to=\"/install\" style={{ color: \"white\" }}>\n                <GetAppIcon aria-label=\"install\" color=\"inherit\"></GetAppIcon>\n            </Link>\n            <div style={{ width: 10 }}></div>\n            <Link to=\"/account\" style={{ color: \"white\" }}>\n                <AccountCircleIcon aria-label=\"account\" color=\"inherit\"></AccountCircleIcon>\n            </Link>\n            <div style={{ width: 10 }}></div>\n            <Link to=\"/test\" style={{ color: \"white\" }}>\n                Test\n            </Link>\n        </Toolbar>\n    </AppBar>\n}","export class DateUtils {\n  /**\n   * Convert a date to a string \"YYYY-MM-DD\"\n   * @param d\n   * @returns\n   */\n  public static getDateInYYYY_MM_DD_Format(d: Date) {\n    return d.toISOString().substring(0, 10);\n  }\n\n  /**\n   * Convert a date to a string \"HH:MM\" using 24 hour\n   * @param d\n   * @returns\n   */\n  public static getTimeInHH_MM_Format(d: Date) {\n    const hours = d.getHours();\n    const minutes = d.getMinutes();\n    return hours.toString() + ':' + minutes.toString();\n  }\n\n  public static convertDateTimeIntoDate(date: string, time: string) {\n    const d: Date = new Date(date);\n    const splitTime = time.split(':');\n    const hours = parseInt(splitTime[0]);\n    if (!hours) d.setHours(hours);\n    else d.setHours(0);\n    const minutes = parseInt(splitTime[1]);\n    if (!minutes) d.setMinutes(minutes);\n    else d.setMinutes(0);\n    return date;\n  }\n}\n","import { createContext, useContext, useState } from 'react';\n\nlet defaultBreadCrumbs: string[] = [];\nconst BreadCrumbsContext = createContext<{ state: string[], update: (newValue: string[]) => void }>({ state: defaultBreadCrumbs, update: (newValue) => { defaultBreadCrumbs = newValue } });\n\ninterface IBreadCrumbsContextProps {\n    children: any\n}\n\nexport function ThemeProvider(props: IBreadCrumbsContextProps) {\n    const [breadCrumbs, setBreadCrumbs] = useState<string[]>(defaultBreadCrumbs);\n    return <BreadCrumbsContext.Provider value={{ state: breadCrumbs, update: setBreadCrumbs }}>\n        {props.children}\n    </BreadCrumbsContext.Provider>;\n}\n\nexport function useBreadCrumbs() {\n    return useContext(BreadCrumbsContext);\n}","import React, { useState } from \"react\";\nimport { Card, Input, InputAdornment, TextField } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport { getDb } from \"../../context/AuthProvider\";\nimport { Course } from \"golf-gamblers-model\"\nimport { useBreadCrumbs } from \"../../context/BreadcrumbsProvider\";\ninterface FirebaseObject<T> {\n    id: string;\n    value: T;\n}\ninterface ISelectCourseProps {\n    goBack: () => void;\n    selectCourse: (courseId: string, courseName: string) => void;\n}\nexport default function SelectCourse(props: ISelectCourseProps) {\n    const db = getDb();\n    const breadCrumbs = useBreadCrumbs();\n    const [prevSearchText, setPrevSearchText] = useState(\"\")\n    const [searchText, setSearchText] = useState(\"\")\n    const [courseResults, setCourseResults] = useState<FirebaseObject<Course>[]>([]);\n    const [lastSearchedTimeStampMs, setLastSearchedTimeStampMs] = useState(new Date().getUTCMilliseconds());\n    const [timer, setTimer] = useState<NodeJS.Timeout>()\n\n    const delayBeforeSearchMs = 400;\n\n    async function searchForCourseName(newSearchText: string) {\n        const query = db.collection('courses').where('name', '>=', newSearchText).where('name', '<=', newSearchText + '\\uf8ff').limit(25);\n        const courseSearchResults = await query.get();\n        const searchResultsArr = [];\n        for (let i = 0; i < courseSearchResults.docs.length; i++) {\n            const doc = courseSearchResults.docs[i];\n            const course = doc.data() as Course;\n            searchResultsArr.push({ id: doc.id, value: course });\n        }\n        setCourseResults(searchResultsArr);\n    }\n\n    function handleSearchTextChange(e: React.ChangeEvent<HTMLInputElement>) {\n        setSearchText(e.target.value);\n        // Clears running timer and starts a new one each time the user types\n        if (timer) {\n            clearTimeout(timer);\n        }\n        setTimer(setTimeout(() => {\n            searchForCourseName(e.target.value);\n        }, delayBeforeSearchMs))\n    }\n    function handleSelectCourse(courseId: string, courseName: string) {\n        props.selectCourse(courseId, courseName);\n        props.goBack();\n    }\n    return <div>\n        <h2>Select Course</h2>\n        <div><TextField type=\"text\" value={searchText} onChange={handleSearchTextChange} InputProps={{\n            startAdornment: (\n                <InputAdornment position=\"start\">\n                    <SearchIcon />\n                </InputAdornment>\n            ),\n        }}\n        ></TextField></div>\n        <div>\n            <br></br>\n            {courseResults.map((courseObj, i) => {\n                const course = courseObj.value;\n                return <div key={'course-' + i}>\n                    <Card onClick={() => handleSelectCourse(courseObj.id, course.name)}>\n                        <b>{course.name}</b>\n                        <div>{course.location.country}, {course.location.city} {course.location.state}</div>\n                    </Card>\n                    <br></br>\n                </div>\n            })}\n        </div>\n    </div>\n}\n","export default function SelectGroup() {\n\n    return <div>\n    </div>\n}\n","import React, { useState } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { DateUtils } from \"../../common/utils/DateUtils\";\nimport SelectCourse from \"./SelectCourse\";\nimport SelectGroup from \"./SelectGroup\";\n\nexport default function CreateEvent() {\n    const [eventName, setEventName] = useState(\"\");\n    const [courseName, setCourseName] = useState(\"\");\n    const [courseId, setCourseId] = useState(\"\");\n    const [numberOfHoles, setNumberOfHoles] = useState(18);\n    const [startingHole, setStartingHole] = useState(1);\n    const [maxBet, setMaxBet] = useState(5);\n    const [startDate, setStartDate] = useState(DateUtils.getDateInYYYY_MM_DD_Format(new Date()));\n    const [startTime, setStartTime] = useState(DateUtils.getTimeInHH_MM_Format(new Date()));\n    const [isSelectingCourse, setIsSelectingCourse] = useState(false);\n    const [isSelectingGroup, setIsSelectingGroup] = useState(false);\n\n    // handlers\n    function handleEventNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        setEventName(e.target.value);\n    }\n    function handleMaxBetChange(e: React.ChangeEvent<HTMLInputElement>) {\n        const updated = parseInt(e.target.value);\n        if (updated !== NaN) {\n            console.log(updated)\n            setMaxBet(updated);\n        }\n    }\n    function handleStartDateChange(e: React.ChangeEvent<HTMLInputElement>) {\n        setStartDate(e.target.value)\n    }\n    function handleStartTimeChange(e: React.ChangeEvent<HTMLInputElement>) {\n        setStartTime(e.target.value);\n    }\n    function handleIsSelectingCourse(e: React.FocusEvent<HTMLInputElement>) {\n        setIsSelectingCourse(true);\n    }\n    function handleGoBack() {\n        setIsSelectingCourse(false);\n    }\n    function handleSelectCourse(courseId: string, courseName: string) {\n        setCourseId(courseId);\n        setCourseName(courseName);\n    }\n    function handleSelectGroup(courseId: string, courseName: string) {\n        setCourseId(courseId);\n        setCourseName(courseName);\n    }\n\n    if (isSelectingCourse) {\n        return <SelectCourse goBack={handleGoBack} selectCourse={handleSelectCourse}></SelectCourse>;\n    } else if (isSelectingGroup) {\n        return <SelectGroup></SelectGroup>;\n    } else {\n        return <div>\n            <h2>Create Event</h2>\n            <div><TextField value={eventName} label=\"Event Name\" onChange={handleEventNameChange}></TextField></div>\n            <div><TextField value={courseName} label=\"Course\" onChange={handleEventNameChange} onFocus={handleIsSelectingCourse}></TextField></div>\n            <div><TextField type=\"number\" value={maxBet} label=\"Max Down\" onChange={handleMaxBetChange}></TextField></div>\n            <div><TextField type=\"date\" value={startDate} label=\"Date\" onChange={handleStartDateChange}></TextField></div>\n            <div><TextField type=\"time\" value={startTime} label=\"Time\" onChange={handleStartTimeChange}></TextField></div>\n            <div><TextField type=\"time\" value={startTime} label=\"Time\" onChange={handleStartTimeChange}></TextField></div>\n            <Button>Create Event</Button>\n        </div>\n    }\n\n\n}","import { Button, withWidth } from \"@material-ui/core\";\nimport { BetsLeaderBoard, Hole, Holes, Scorecard } from \"golf-gamblers-model\";\nimport { useEffect, useState } from \"react\";\nimport { getDb, useUserContext } from \"../../context/AuthProvider\";\n\nexport function Test() {\n    const betIdToBetTypeMap: { [id: string]: string } = {\n        \"Pzc5DKRUWeMD3GPFQNBR\": \"Skins\",\n        \"qoiwy1pdSnDRa7K3T1OC\": \"Match Play\"\n    }\n    const db = getDb();\n\n    // states\n    const [scorecard1, setScorecard1] = useState<undefined | Scorecard>(undefined);\n    const [scorecard2, setScorecard2] = useState<undefined | Scorecard>(undefined);\n    const [scorecard3, setScorecard3] = useState<undefined | Scorecard>(undefined);\n\n    const [scorecardLeaderboard, setScorecardLeaderboard] = useState<undefined | any>(undefined);\n    const [betsLeaderboard, setBetsLeaderboard] = useState<undefined | BetsLeaderBoard>(undefined);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('scorecards').doc(\"FATik4TKqntuhM3wagIp\").onSnapshot((snap) => {\n            const updated = snap.data() as Scorecard;\n            setScorecard1(updated);\n        })\n        return () => {\n            unsubscribe();\n        }\n    }, [db]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('scorecards').doc(\"g6yZeFeMB2hk6tFLG5RM\").onSnapshot((snap) => {\n            const updated = snap.data() as Scorecard;\n            setScorecard2(updated);\n        })\n        return () => {\n            unsubscribe();\n        }\n    }, [db]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('scorecards').doc(\"ojUAzhpQDmA8fX9Q9CW2\").onSnapshot((snap) => {\n            const updated = snap.data() as Scorecard;\n            setScorecard3(updated);\n        })\n        return () => {\n            unsubscribe();\n        }\n    }, [db]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('event-leaderboards').doc(\"cmCTfLfMy4JW3ahiwmCT\").collection('leaderboards').doc('scorecards').onSnapshot((snap) => {\n            const updated = snap.data() as any;\n            setScorecardLeaderboard(updated);\n        })\n        return () => {\n            unsubscribe();\n        }\n    }, [db]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('bet-leaderboards').doc(\"cmCTfLfMy4JW3ahiwmCT\").onSnapshot((snap) => {\n            const updated = snap.data() as BetsLeaderBoard;\n            setBetsLeaderboard(updated);\n        })\n        return () => {\n            unsubscribe();\n        }\n    }, [db]);\n\n\n    function handleScorecardUpdate(scorecard: Scorecard) {\n        if (scorecard.scorecardId === \"FATik4TKqntuhM3wagIp\")\n            setScorecard1({ ...scorecard })\n        if (scorecard.scorecardId === \"g6yZeFeMB2hk6tFLG5RM\")\n            setScorecard2({ ...scorecard })\n        if (scorecard.scorecardId === \"ojUAzhpQDmA8fX9Q9CW2\")\n            setScorecard3({ ...scorecard })\n    }\n\n    function handleScorecardSave(scorecard: Scorecard) {\n        db.collection('scorecards').doc(scorecard.scorecardId).set(scorecard);\n    }\n\n    console.log(scorecard3)\n    const scorecards = [scorecard1, scorecard2, scorecard3];\n\n    const scorecardsDiv = Object.values(scorecards).map((scorecard, index) => {\n        if (scorecard) {\n            const holeNumbers = Object.keys(scorecard.holes);\n            const holes: Hole[] = Object.values(scorecard.holes)\n            return <div key={scorecard.scorecardId}>\n                <div>Scorecard Id: <b>{scorecard.scorecardId}</b> | User Id: <b>{scorecard.userId}</b></div>\n                <br></br>\n                <table style={{ alignContent: \"center\" }}>\n                    <thead>\n                        <tr>\n                            {holeNumbers.map((holeNumber, i) => {\n                                return <th key={'hole-' + holeNumber}>{holeNumber}</th>\n                            })}\n                            <th>Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {holes.map((hole, i) => {\n                                return <td key={'holescore-' + i}> <input type=\"number\" value={hole.strokes} onChange={(e: any) => { hole.strokes = parseInt(e.target.value); handleScorecardUpdate(scorecard) }} style={{ width: \"40px\" }} ></input> </td>\n                            })}\n                            {scorecardLeaderboard ? <td>{scorecardLeaderboard.scorecards[scorecard.scorecardId].runningTotal}</td> : <td>?</td>}\n                        </tr>\n                    </tbody>\n                </table>\n                <Button onClick={() => { handleScorecardSave(scorecard) }}>Save Scorecard</Button>\n                <br></br>\n            </div>\n        } else {\n            return <div key={'scorecard' + index}></div>\n        }\n    });\n\n    const betsLeaderboardDiv = betsLeaderboard ? Object.entries(betsLeaderboard.betSummary).map((betSummaryEntry) => {\n        const userId = betSummaryEntry[0];\n        const summary = betSummaryEntry[1];\n        const userBetEntries = Object.entries(summary.betsAndResults);\n        let sumOfBets = 0;\n        const betEntries = userBetEntries.map((userBetEntry) => {\n            const betId = userBetEntry[0];\n            const betResult = userBetEntry[1];\n            sumOfBets += betResult;\n            return <div key={\"bet-summary-\" + betId} style={{ paddingLeft: '50px' }}>\n                <div><b>{betIdToBetTypeMap[betId]}</b> : {betResult}</div>\n            </div>\n        })\n\n        return <div key={\"user-summary-\" + userId}>\n            <div>User Id: {userId}</div>\n            <div>\n                {betEntries}\n                <div style={{ paddingLeft: '50px' }}><b>Total</b> : {sumOfBets}</div>\n            </div>\n        </div>\n    })\n        : <div></div>\n    return <div style={{ textAlign: \"left\" }}>\n        <h2>Bets</h2>\n        {betsLeaderboardDiv}\n        <h2>Scorecards</h2>\n        {scorecardsDiv}\n    </div>\n}\n\n","// import router\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport { useUserContext } from \"../context/AuthProvider\";\nimport Account from \"./Account\";\nimport Login from \"./auth/Login\";\nimport Home from \"./Home\";\nimport Install from \"./Install\";\nimport NavBar from \"./NavBar\";\nimport CreateEvent from \"./forms/CreateEvent\"\nimport { Test } from \"./test/Test\";\n\nexport default function Main() {\n    return <div style={{ textAlign: \"center\" }}>\n        <Router>\n            <NavBar></NavBar>\n            <Switch>\n                <Route path=\"/login\">\n                    <Login></Login>\n                </Route>\n                <Route path=\"/install\">\n                    <Install></Install>\n                </Route>\n                <Route path=\"/test\">\n                    <Test></Test>\n                </Route>\n                <PrivateRoute path=\"/account\">\n                    <Account></Account>\n                </PrivateRoute>\n                <PrivateRoute path=\"/create-event\">\n                    <CreateEvent></CreateEvent>\n                </PrivateRoute>\n                <PrivateRoute path=\"/\">\n                    <Home></Home>\n                </PrivateRoute>\n                {/* Default path back to home */}\n                <PrivateRoute path=\"*\">\n                    <Redirect to=\"/\"></Redirect>\n                </PrivateRoute>\n            </Switch>\n        </Router>\n    </div>\n}\n\ninterface IRouteProps {\n    children: any,\n    path: string\n}\n\nfunction PrivateRoute({ children, ...rest }: IRouteProps) {\n    const user = useUserContext();\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}","import Main from \"./component/Main\";\nimport { AuthProvider } from \"./context/AuthProvider\";\nimport { Elements } from '@stripe/react-stripe-js';\nimport { SnackbarProvider } from 'notistack';\n\n// import Stripe\nimport { loadStripe } from '@stripe/stripe-js';\nimport StripeConfig from './config/stripe.config.json'\n\n// initialize Stripe\nconst stripePromise = loadStripe(StripeConfig.publishableKey)\n\nfunction App() {\n  return (<AuthProvider>\n    <Elements stripe={stripePromise}>\n      <SnackbarProvider\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}>\n        <Main />\n      </SnackbarProvider>\n    </Elements>\n  </AuthProvider>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}